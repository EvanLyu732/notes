#+title: Assembly language Step-By-Step
#+begin_quote
The key to assembly language is understanding memory addresses
#+end_quote

/memory/ is an aggregate of switches that retain a pattern long enough for that pattern to be read and understood by a person or a mechanism.

** A ram chip
[[./img/ram_chip.png]]

** A megabyte chip
[[./img/one_megabyte_chip.png]]

#+begin_quote
the CPU passes an address to the memory system, and the memory system either accepts data from the CPU for storage at that address or places the data found at that address on the computer’s data bus for the CPU to process.
#+end_quote

[[./img/cpu_mem.png]]


- Peripherals: computer contains additional devices computer contains additional devices(eg. disk drives, USB ports)
- IO Addresses: The address of a peripheral
- Registers: The CPU’s immediate work-in-progress is held in temporary storage containers



\\

* Location
#+begin_quote
The skill of assembly language consists of a deep comprehension of memory addressing.
#+end_quote

** Memory Model
| Name        | Value in Decimal | Value in Hex |
| Byte        |                1 | 01H          |
| Word        |                2 | 02H          |
| Double Word |                4 | 04H          |
| Quad Word   |                8 | 08H          |
| Ten Byte    |               10 | 0AH          |
| Paragraph   |               16 | 10H          |
| Page        |              256 | 100H         |
| Segment     |           65,356 | 10000H       |

#+begin_quote
A segment is the location in memory at which the CPU’s 64K blinders are positioned.
#+end_quote

\\

#+begin_quote
/All segment registers are 16 bits in size, irrespective of the CPU./

- CS: code segment
- DS: data segment
- SS: stack segment
- ES & FS & GS: extra segment

\\

- Instruction pointer(IP):  contains the offset address of the next machine instruction to be executed in the current code segment.
- Code Segments: an area of memory where machine instructions are stored.
- Current Code Segments: code segment whose segment address is currently stored in code segment register /CS/.

/Together, CS and IP contain the full address of the next machine instruction to be executed/.
#+end_quote

\\

* Real Mode Flat Model
 BackGround: In the real mode ﬂat model, all program and all the data works on must exist within a single 64K block of memory.

 [[./img/real_mode_flat.png]]
\\

[[./img/real_mode_seg_model.png]]


* Protected Model Flat Model

#+begin_quote
In protected mode ﬂat model, you are given a portion of 4GB of memory as your own, while other portions still belong to the operating system.
#+end_quote
[[./img/protected_mode_flat_model.png]]


* Creating Assmembly Language Programs
